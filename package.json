{
  "devDependencies": {
    "jsdom": "^25.0.1",
    "vitest": "^2.1.8"
  },
  "name": "try_test",
  "version": "1.0.0",
  "description": "First, the boiler plate for HTML. Then adding the js and css to their respective folders for clean workspace. \r Functionality: inputing the name of the color in the text inside the circle, if the name is a valid color from the [MDN color standard](https://developer.mozilla.org/en-US/docs/Web/CSS/color) it will return a value, else, returns nothing. It will then reset to the placeholder color **rebeccapurple**. \r To get the hex code, I searched and found a solution in stackoverflow rgb to hexcode where `window.getComputedStyle(<element>).backgroundColor` returns rgb values `[255, 255, 255]` and then converted to int parsed to hexa decimal string. Hence ```.toString(16)```. Then slice as -2 to ensure 2 values are returned. Finally joined to get the whole hexadecimal.",
  "main": "index.js",
  "directories": {
    "test": "test"
  },
  "dependencies": {
    "assertion-error": "^2.0.1",
    "cac": "^6.7.14",
    "chai": "^5.1.2",
    "check-error": "^2.1.1",
    "debug": "^4.4.0",
    "deep-eql": "^5.0.2",
    "es-module-lexer": "^1.6.0",
    "esbuild": "^0.21.5",
    "estree-walker": "^3.0.3",
    "expect-type": "^1.1.0",
    "loupe": "^3.1.2",
    "magic-string": "^0.30.17",
    "ms": "^2.1.3",
    "nanoid": "^3.3.8",
    "pathe": "^1.1.2",
    "pathval": "^2.0.0",
    "picocolors": "^1.1.1",
    "postcss": "^8.4.49",
    "rollup": "^4.30.1",
    "siginfo": "^2.0.0",
    "source-map-js": "^1.2.1",
    "stackback": "^0.0.2",
    "std-env": "^3.8.0",
    "tinybench": "^2.9.0",
    "tinyexec": "^0.3.2",
    "tinypool": "^1.0.2",
    "tinyrainbow": "^1.2.0",
    "tinyspy": "^3.0.2",
    "vite": "^5.4.11",
    "vite-node": "^2.1.8",
    "why-is-node-running": "^2.3.0"
  },
  "scripts": {
    "test": "vitest"
  },
  "keywords": [],
  "author": "",
  "license": "ISC"
}
